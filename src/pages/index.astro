---
import { getCollection } from "astro:content";

import Center from "../components/Center.astro";
import Postcard from "../components/Postcard/Postcard.astro";
import ProjectPreview from "../components/ProjectPreview.astro";
import BaseLayout from "../layouts/BaseLayout.astro";

import dayjs from "dayjs";
import PostLink from "src/components/PostLink.astro";
import PageHeader from "../components/PageHeader.astro";
import { smartquotes } from "../helpers/helpers";

import Button from "../components/Buttons.astro";

const posts = await getCollection("posts");
posts.sort((a, b) => {
  return dayjs(b.data.datePublished).isBefore(dayjs(a.data.datePublished))
    ? -1
    : 1;
});

const work = await getCollection("work");

// Sort by year subdirectory
work.sort((a, b) =>
  parseInt(a.id.substring(0, 4)) > parseInt(b.id.substring(0, 4)) ? -1 : 1
);
---

<BaseLayout
  title="Teslak"
  description="Teslak is a UX designer and IT enthusiast based in San Francisco, CA"
  includeFooter
>
  <Center>
    <section class="home">
      <h1 class="visuallyhidden">Teslak cutaway and articles</h1>
      <div class="intro">
        <p>
          <a href="/about" class="inline-link">Teslak</a> is a UX designer based
          in San Francisco. I'm passionate about IT, design, photography, economic,
          science ✨ and much more!
        </p>
      </div>
    </section>
    <!--
    <section class="work">
      <p>Writing</p>
      {
        posts.map((post) => (
          <PostLink
            url={`posts/${post.slug}`}
            title={smartquotes(post.data.title)}
            description={smartquotes(post.data.description)}
            datePublished={post.data.datePublished}
          />
        ))
      }
    </section>
    -->
    <br />
    <br />
    <div>
      <Button class="tg_button">Telegram</Button>
      <Button class="Button">Telegram</Button>
      <button class="tg_button">Telegram Blog</button>
      <button class="Button">Instagram</button>
    </div>
  </Center>
</BaseLayout>

<script>
  import { addSam, clearSams, numSams } from "../stores/sam";

  function setupSam() {
    const samButton = document.querySelector("[data-sam-button]");
    samButton?.addEventListener("click", () => addSam());

    const shooButton = document.querySelector("[data-sam-shoo]");

    if (shooButton) {
      shooButton.addEventListener("click", () => {
        clearSams();
      });

      numSams.subscribe((num) => {
        num > 2
          ? shooButton.classList.add("visible")
          : shooButton.classList.remove("visible");
      });
    }
  }

  setupSam();

  document.addEventListener("astro:after-swap", () => setupSam());
</script>

<style lang="scss">
  .visuallyhidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  .home {
    display: flex;
    flex-direction: column;
    gap: var(--space-3xl);
  }

  .work {
    padding-block: var(--space-3xl);
    display: flex;
    flex-direction: column;
    gap: var(--space-3xl);
  }

  .intro {
    padding-block-start: var(--space-2xl);
    text-wrap: balance;
    user-select: none;

    p {
      font-size: var(--step-4);
      letter-spacing: var(--letter-spacing-condensed);
      line-height: var(--line-height-tight);
    }
  }

  .synth {
    display: flex;
    align-items: center;
    justify-content: center;

    @media (width > 640px) {
      background: var(--gray-3);
      border-radius: var(--radius-m);
      padding: var(--space-xl) var(--space-l);
    }
  }

  [data-sam-button] {
    cursor: pointer;

    &:active {
      transform: scale(0.95);
    }
  }
</style>
